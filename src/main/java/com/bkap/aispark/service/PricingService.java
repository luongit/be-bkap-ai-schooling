package com.bkap.aispark.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bkap.aispark.entity.Pricing;
import com.bkap.aispark.repository.PricingRepository;

@Service
public class PricingService {
    @Autowired
    private PricingRepository pricingRepository;

    public List<Pricing> getAllPricing() {
        return pricingRepository.findAll();
    }

    // ðŸ”¹ ThÃªm má»›i Pricing
    public Pricing createPricing(Pricing pricing) {
        if (pricingRepository.existsByActionCode(pricing.getActionCode())) {
            throw new IllegalArgumentException("MÃ£ thao tÃ¡c Ä‘Ã£ tá»“n táº¡i!");
        }

        if (pricing.getActionName() == null || pricing.getActionName().trim().isEmpty()) {
            throw new IllegalArgumentException("TÃªn thao tÃ¡c khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng!");
        }

        return pricingRepository.save(pricing);
    }

    // ðŸ”¹ XÃ³a Pricing
    public void deletePricing(Integer id) {
        Optional<Pricing> optional = pricingRepository.findById(id);
        if (optional.isEmpty()) {
            throw new IllegalArgumentException("KhÃ´ng tÃ¬m tháº¥y pricing vá»›i id = " + id);
        }

        Pricing pricing = optional.get();

        // Náº¿u pricing cÃ³ version liÃªn káº¿t, báº¡n cÃ³ thá»ƒ xá»­ lÃ½ logic riÃªng á»Ÿ Ä‘Ã¢y
        // (VD: khÃ´ng cho xÃ³a náº¿u cÃ³ version Ä‘ang active)
        pricingRepository.delete(pricing);
    }

}
